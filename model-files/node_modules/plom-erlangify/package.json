{
  "name": "plom-erlangify",
  "version": "0.2.0",
  "description": "Erlang expansion of process.json link.json and theta.json.",
  "main": "index.js",
  "scripts": {
    "test": "mocha"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/plom/plom-erlangify.git"
  },
  "keywords": [
    "PLoM",
    "Erlang",
    ""
  ],
  "author": {
    "name": "Sebastien Ballesteros"
  },
  "license": "GPLv3",
  "readmeFilename": "README.md",
  "gitHead": "c2249eb6d5ab195ecbfb26f73a532a1742fa227b",
  "dependencies": {
    "clone": "~0.1.5"
  },
  "readme": "plom-erlangify\n==============\n\nErlangify your PLoM JSON components (process, link and theta).\n\n\ninstallation\n============\n\n    npm install plom-erlangify\n\nusage\n=====\n\n    var Erlang = require('plom-erlangify');\n    \n    //get some model components\n    var p = require('./test/process.json')\n      , l = require('./test/link.json')\n      , t = require('./test/theta.json');\n    \n    //Definition of the Erlang expansion\n    var def = [\n      {from: 'E', to: 'E', rate: '(1-alpha)*l', shape: 3, rescale: 'l'},\n      {from: 'I', to: 'I', rate: '(1-alpha)*v', shape: 2, rescale: 'v'}\n    ];\n    \n    //erlangify !    \n    var erlang = new Erlang(def);\n    \n    var e_p = erlang.ify(p)\n      , e_l = erlang.ify(l)\n      , e_t = erlang.ify(t);      \n\ntest\n====\n\nsee ```test/index.js```\n\n\nLicense\n=======\n\nGPL version 3 or any later version.\n",
  "bugs": {
    "url": "https://github.com/plom/plom-erlangify/issues"
  },
  "_id": "plom-erlangify@0.2.0",
  "dist": {
    "shasum": "da07cd47f81d3c3a1831c5c01396cf88572e68be"
  },
  "_from": "plom-erlangify@~0.2.0",
  "_resolved": "https://registry.npmjs.org/plom-erlangify/-/plom-erlangify-0.2.0.tgz"
}
